{{- $L := (datasource "language") -}}

{{- $remoteUser := $L.devcontainer.remoteUser -}}

{{- $packages := coll.Slice -}}
{{- if has $L.devcontainer.build "packages" -}}
  {{- $packages = (coll.Append $packages $L.devcontainer.build.packages) | coll.Flatten -}}
{{- end -}}

{{- $insertHome := and (has $L.devcontainer.build "user") ($L.devcontainer.build.user | strings.Contains "HOME") -}}

{{- $prepareBuildArgs := coll.Slice -}}
{{- $rootBuildArgs := coll.Slice -}}
{{- $userBuildArgs := coll.Slice -}}
{{- if has $L.devcontainer.build "args" -}}
  {{- range $arg, $v := $L.devcontainer.build.args -}}
    {{- if and (has $L.devcontainer.build "prepare")
               ($L.devcontainer.build.prepare | strings.Contains $arg) -}}
      {{- $prepareBuildArgs = coll.Append $arg $prepareBuildArgs -}}
    {{- else if and (has $L.devcontainer.build "root")
               ($L.devcontainer.build.root | strings.Contains $arg) -}}
      {{- $rootBuildArgs = coll.Append $arg $rootBuildArgs -}}
    {{- else if and (has $L.devcontainer.build "user")
               ($L.devcontainer.build.user | strings.Contains $arg) -}}
      {{- $userBuildArgs = coll.Append $arg $userBuildArgs -}}
    {{- end -}}
  {{- end -}}
{{- end -}}

{{- if not (env.Getenv "SIMPLE_IMAGE" "") }}

{{- "" -}}
FROM ghcr.io/dhhyi/dcc-base-{{ $L.devcontainer.build.base }}:latest
{{ "" }}

{{- if $prepareBuildArgs }}
{{- range $prepareBuildArgs }}
ARG {{ . }}
{{- end }}
{{ end }}

{{- if has $L.devcontainer.build "prepare" }}
{{ conv.Join $L.devcontainer.build.prepare "\n" }}
{{ end }}

{{- if $packages }}
RUN apt-get update && export DEBIAN_FRONTEND=noninteractive \
    && apt-get -y install --no-install-recommends \
    {{ conv.Join $packages " " }} \
    && apt-get clean && rm -rf /var/lib/apt/lists/*
{{ end }}

{{- if $rootBuildArgs }}
{{- range $rootBuildArgs }}
ARG {{ . }}
{{- end }}
{{ end }}

{{- if has $L.devcontainer.build "root" }}
{{ conv.Join $L.devcontainer.build.root "\n" }}
{{ end }}

{{- "" }}
USER {{ $remoteUser }}
{{ "" }}

{{- if $insertHome -}}
ENV HOME=/home/{{ $remoteUser }}
{{ end }}

{{- if $userBuildArgs }}
{{- range $userBuildArgs }}
ARG {{ . }}
{{- end }}
{{ end }}

{{- if has $L.devcontainer.build "user" }}
{{ conv.Join $L.devcontainer.build.user "\n" }}
{{ end }}

{{- end -}}
