{{- $L := (datasource "language") -}}

{{- $simpleImage := env.Getenv "SIMPLE_IMAGE" "" -}}

{{- $settings := dict -}}
{{- if has $L.vscode "settings" -}}
  {{ $settings = coll.Merge $settings $L.vscode.settings }}
{{- end -}}

{{- $command := slice -}}
{{- if has $L.language "binary" -}}
  {{- $command = coll.Append $L.language.binary $command -}}
  {{- if has $L.language "binaryArgs" -}}
    {{- $command = coll.Append $L.language.binaryArgs $command -}}
  {{- end -}}
{{- end -}}
{{- $version := slice -}}
{{- if or (not (has $L.language "version")) ($L.language.version) -}}
  {{- if (has $L.language "version") }}
    {{- range split ($L.language.version | strings.TrimSpace) "\n" }}
      {{- $version = coll.Append . $version -}}
    {{- end -}}
  {{- else if (has $L.language "binary") }}
    {{- $version = coll.Append (conv.Join (slice $L.language.binary "--version")  " ") $version -}}
  {{- end -}}
{{- end -}}

{{- define "HIDE_FILES" -}}
files.exclude:
  {{ range . }}{{ . }}: true
  {{ end }}
{{- end -}}
{{- if $L.vscode.hideFiles -}}
{{- $settings = coll.Merge $settings (data.YAML (tmpl.Exec "HIDE_FILES" $L.vscode.hideFiles)) -}}
{{- end -}}

{{- $extensions := coll.Slice -}}
{{- if has $L.vscode "extensions" -}}
  {{ $extensions = (coll.Append $extensions $L.vscode.extensions) | coll.Flatten }}
{{- end -}}

{
  {{ if has $L.devcontainer "name" }}"name": "{{ $L.devcontainer.name }}",
  {{ end -}}
  {{ if has $L.extras "forward-x11" }}"runArgs": [
    "--net", "host",
    "-e", "DISPLAY=:0",
    "-v", "/tmp/.X11-unix:/tmp/.X11-unix"
  ],
  {{ end -}}
  {{ if $simpleImage -}}
  "image": "{{ $simpleImage }}"
  {{- else -}}
  "build": {
    "dockerfile": "Dockerfile"
    {{- if has $L.devcontainer.build "args" }},
    "args": {{ $L.devcontainer.build.args | data.ToJSONPretty "  " | strings.Indent "    " | strings.Trim " " }}
    {{- end }}
  },
  "settings": {{ $settings | data.ToJSONPretty "  " | strings.Indent "  " | strings.Trim " " }}{{ if $extensions }},
  "extensions": {{ $extensions | data.ToJSONPretty "  " | strings.Indent "  " | strings.Trim " " }}{{ end }}
  {{- end }},
  "containerEnv": {
    "DCC_BINARY": {{ conv.Join $command " " | data.ToJSON }},
    "DCC_REPL": {{ if has $L.language "repl" }}{{ $L.language.repl | data.ToJSON }}{{ else }}""{{ end }},
    "DCC_VERSION": {{ (conv.Join $version "; ") | data.ToJSON }},
    "DCC_SELFTEST": {{ if has $L.devcontainer "selftest" }}{{ $L.devcontainer.selftest | base64.Encode | data.ToJSON }}{{ else }}""{{ end }}
  }
}
