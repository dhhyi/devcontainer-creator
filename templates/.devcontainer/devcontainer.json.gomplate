{{- $L := (datasource "language") -}}

{{- $simpleImage := env.Getenv "SIMPLE_IMAGE" "" -}}

{{- $remoteUser := "vscode"}}{{ if and (has $L "devcontainer") (has $L.devcontainer "remoteUser") }}{{ $remoteUser = $L.devcontainer.remoteUser }}{{ end -}}

{{- $settings := dict -}}
{{- if  and (has $L "vscode") (has $L.vscode "settings") -}}
  {{ $settings = coll.Merge $settings $L.vscode.settings }}
{{- end -}}

{{- $ignores := coll.Slice ".devcontainer" ".vscode" ".update_devcontainer.sh" -}}
{{- if  and (has $L "vscode") (has $L.vscode "ignoreFiles") -}}
  {{ $ignores = (coll.Append $ignores $L.vscode.ignoreFiles) | coll.Flatten }}
{{- end -}}
{{- define "IGNORES" -}}
files.exclude:
  {{ range . }}{{ . }}: true
  {{ end }}
{{- end -}}
{{- $settings = coll.Merge $settings (data.YAML (tmpl.Exec "IGNORES" $ignores)) -}}

{{- $extensions := coll.Slice -}}
{{- if and (has $L "vscode") (has $L.vscode "extensions") -}}
  {{ $extensions = (coll.Append $extensions $L.vscode.extensions) | coll.Flatten }}
{{- end -}}

{
  {{ if and (has $L "devcontainer") (has $L.devcontainer "name") }}"name": "{{ $L.devcontainer.name }}",
  {{ end -}}
  {{ if $simpleImage -}}
  "image": "{{ $simpleImage }}"
  {{- else -}}
  "build": {
    "dockerfile": "Dockerfile"
    {{- if and (has $L "devcontainer") (has $L.devcontainer "build") (has $L.devcontainer.build "args") }},
    "args": {{ $L.devcontainer.build.args | data.ToJSONPretty "  " | strings.Indent "    " | strings.Trim " " }}
    {{- end }}
  },
  "postAttachCommand": "sh /disclaimer.sh \"${containerWorkspaceFolder}\"",
  "features": {
    "ghcr.io/dhhyi/devcontainer-creator/dcc-helpers:latest": {
      "cont": "{{ if has $L.language "binary" }}true{{ else }}false{{ end }}"
    }
  },
  "settings": {{ $settings | data.ToJSONPretty "  " | strings.Indent "  " | strings.Trim " " }},
  "extensions": {{ $extensions | data.ToJSONPretty "  " | strings.Indent "  " | strings.Trim " " }},
  "remoteUser": "{{ $remoteUser }}"
  {{- end }}
}
