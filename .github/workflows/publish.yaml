# This file is generated by pipeline.js
name: Publish
on:
  push:
    branches:
      - main
jobs:
  calc:
    runs-on: ubuntu-latest
    outputs:
      buildLanguages: ${{ steps.calculate.outputs.buildLanguages }}
      buildBase: ${{ steps.calculate.outputs.buildBase }}
      dccClojure: ${{ steps.calculate.outputs.dccClojure }}
      dccDeno: ${{ steps.calculate.outputs.dccDeno }}
      dccElixir: ${{ steps.calculate.outputs.dccElixir }}
      dccElm: ${{ steps.calculate.outputs.dccElm }}
      dccErlang: ${{ steps.calculate.outputs.dccErlang }}
      dccFactor: ${{ steps.calculate.outputs.dccFactor }}
      dccGo: ${{ steps.calculate.outputs.dccGo }}
      dccGroovy: ${{ steps.calculate.outputs.dccGroovy }}
      dccHaskell: ${{ steps.calculate.outputs.dccHaskell }}
      dccIo: ${{ steps.calculate.outputs.dccIo }}
      dccJavascriptPnpm: ${{ steps.calculate.outputs.dccJavascriptPnpm }}
      dccJavascript: ${{ steps.calculate.outputs.dccJavascript }}
      dccJulia: ${{ steps.calculate.outputs.dccJulia }}
      dccKotlin: ${{ steps.calculate.outputs.dccKotlin }}
      dccLua: ${{ steps.calculate.outputs.dccLua }}
      dccLualatex: ${{ steps.calculate.outputs.dccLualatex }}
      dccMoonscript: ${{ steps.calculate.outputs.dccMoonscript }}
      dccPerl: ${{ steps.calculate.outputs.dccPerl }}
      dccProlog: ${{ steps.calculate.outputs.dccProlog }}
      dccPython: ${{ steps.calculate.outputs.dccPython }}
      dccRuby: ${{ steps.calculate.outputs.dccRuby }}
      dccScala: ${{ steps.calculate.outputs.dccScala }}
    env:
      commits: ${{ toJSON(github.event.commits) }}
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 0
      - run: npm exec pnpm -- i --ignore-scripts
        name: npm install
      - run: |-
          npm run lint
          npm run format
          npm run synchronize-ci
          git diff --exit-code
        name: Check Integrity
      - run: |-
          noOfCommits=$(echo $commits | jq ". | length")
          git diff --name-only HEAD~$noOfCommits
        name: Report Changed Files
      - id: calculate
        run: >-
          noOfCommits=$(echo $commits | jq ". | length")

          git diff --name-only HEAD~$noOfCommits | node check-lang-ci.js >>
          $GITHUB_OUTPUT

          cat $GITHUB_OUTPUT
        name: Calculate Required Jobs
  bundle:
    uses: ./.github/workflows/bundle.yaml
    secrets: inherit
  features:
    needs:
      - calc
    if: ${{ ! failure() && ! cancelled() && always() }}
    uses: ./.github/workflows/features.yaml
    with:
      skip: ${{ needs.calc.outputs.buildBase == 'false' }}
    secrets: inherit
  baseDebian:
    needs:
      - calc
      - features
    if: ${{ ! failure() && ! cancelled() && always() }}
    name: base://debian
    uses: ./.github/workflows/base.yaml
    with:
      name: debian
      skip: ${{ needs.calc.outputs.buildBase == 'false' }}
    secrets: inherit
  baseDebianOld:
    needs:
      - calc
      - features
    if: ${{ ! failure() && ! cancelled() && always() }}
    name: base://debian-old
    uses: ./.github/workflows/base.yaml
    with:
      name: debian-old
      skip: ${{ needs.calc.outputs.buildBase == 'false' }}
    secrets: inherit
  baseJava:
    needs:
      - calc
      - baseDebian
    if: ${{ ! failure() && ! cancelled() && always() }}
    name: base://java
    uses: ./.github/workflows/base.yaml
    with:
      name: java
      skip: ${{ needs.calc.outputs.buildBase == 'false' }}
    secrets: inherit
  baseNode:
    needs:
      - calc
      - baseDebian
    if: ${{ ! failure() && ! cancelled() && always() }}
    name: base://node
    uses: ./.github/workflows/base.yaml
    with:
      name: node
      skip: ${{ needs.calc.outputs.buildBase == 'false' }}
    secrets: inherit
  baseUbuntu:
    needs:
      - calc
      - features
    if: ${{ ! failure() && ! cancelled() && always() }}
    name: base://ubuntu
    uses: ./.github/workflows/base.yaml
    with:
      name: ubuntu
      skip: ${{ needs.calc.outputs.buildBase == 'false' }}
    secrets: inherit
  dccClojure:
    needs:
      - calc
      - bundle
      - baseJava
    if: ${{ ! failure() && ! cancelled() && always() }}
    name: dcc://clojure
    uses: ./.github/workflows/dcc.yaml
    with:
      name: clojure
      skip: ${{ needs.calc.outputs.dccClojure == 'false' }}
    secrets: inherit
  dccDeno:
    needs:
      - calc
      - bundle
      - baseDebian
    if: ${{ ! failure() && ! cancelled() && always() }}
    name: dcc://deno
    uses: ./.github/workflows/dcc.yaml
    with:
      name: deno
      skip: ${{ needs.calc.outputs.dccDeno == 'false' }}
    secrets: inherit
  dccElixir:
    needs:
      - calc
      - bundle
      - dccErlang
    if: ${{ ! failure() && ! cancelled() && always() }}
    name: dcc://elixir
    uses: ./.github/workflows/dcc.yaml
    with:
      name: elixir
      skip: ${{ needs.calc.outputs.dccElixir == 'false' }}
    secrets: inherit
  dccElm:
    needs:
      - calc
      - bundle
      - baseNode
    if: ${{ ! failure() && ! cancelled() && always() }}
    name: dcc://elm
    uses: ./.github/workflows/dcc.yaml
    with:
      name: elm
      skip: ${{ needs.calc.outputs.dccElm == 'false' }}
    secrets: inherit
  dccErlang:
    needs:
      - calc
      - bundle
      - baseDebian
    if: ${{ ! failure() && ! cancelled() && always() }}
    name: dcc://erlang
    uses: ./.github/workflows/dcc.yaml
    with:
      name: erlang
      skip: ${{ needs.calc.outputs.dccErlang == 'false' }}
    secrets: inherit
  dccFactor:
    needs:
      - calc
      - bundle
      - baseDebian
    if: ${{ ! failure() && ! cancelled() && always() }}
    name: dcc://factor
    uses: ./.github/workflows/dcc.yaml
    with:
      name: factor
      skip: ${{ needs.calc.outputs.dccFactor == 'false' }}
    secrets: inherit
  dccGo:
    needs:
      - calc
      - bundle
      - baseDebian
    if: ${{ ! failure() && ! cancelled() && always() }}
    name: dcc://go
    uses: ./.github/workflows/dcc.yaml
    with:
      name: go
      skip: ${{ needs.calc.outputs.dccGo == 'false' }}
    secrets: inherit
  dccGroovy:
    needs:
      - calc
      - bundle
      - baseDebian
    if: ${{ ! failure() && ! cancelled() && always() }}
    name: dcc://groovy
    uses: ./.github/workflows/dcc.yaml
    with:
      name: groovy
      skip: ${{ needs.calc.outputs.dccGroovy == 'false' }}
    secrets: inherit
  dccHaskell:
    needs:
      - calc
      - bundle
      - baseDebianOld
    if: ${{ ! failure() && ! cancelled() && always() }}
    name: dcc://haskell
    uses: ./.github/workflows/dcc.yaml
    with:
      name: haskell
      skip: ${{ needs.calc.outputs.dccHaskell == 'false' }}
    secrets: inherit
  dccIo:
    needs:
      - calc
      - bundle
      - baseDebian
    if: ${{ ! failure() && ! cancelled() && always() }}
    name: dcc://io
    uses: ./.github/workflows/dcc.yaml
    with:
      name: io
      skip: ${{ needs.calc.outputs.dccIo == 'false' }}
    secrets: inherit
  dccJavascriptPnpm:
    needs:
      - calc
      - bundle
      - dccJavascript
    if: ${{ ! failure() && ! cancelled() && always() }}
    name: dcc://javascript-pnpm
    uses: ./.github/workflows/dcc.yaml
    with:
      name: javascript-pnpm
      skip: ${{ needs.calc.outputs.dccJavascriptPnpm == 'false' }}
    secrets: inherit
  dccJavascript:
    needs:
      - calc
      - bundle
      - baseNode
    if: ${{ ! failure() && ! cancelled() && always() }}
    name: dcc://javascript
    uses: ./.github/workflows/dcc.yaml
    with:
      name: javascript
      skip: ${{ needs.calc.outputs.dccJavascript == 'false' }}
    secrets: inherit
  dccJulia:
    needs:
      - calc
      - bundle
      - baseDebian
    if: ${{ ! failure() && ! cancelled() && always() }}
    name: dcc://julia
    uses: ./.github/workflows/dcc.yaml
    with:
      name: julia
      skip: ${{ needs.calc.outputs.dccJulia == 'false' }}
    secrets: inherit
  dccKotlin:
    needs:
      - calc
      - bundle
      - baseDebian
    if: ${{ ! failure() && ! cancelled() && always() }}
    name: dcc://kotlin
    uses: ./.github/workflows/dcc.yaml
    with:
      name: kotlin
      skip: ${{ needs.calc.outputs.dccKotlin == 'false' }}
    secrets: inherit
  dccLua:
    needs:
      - calc
      - bundle
      - baseDebian
    if: ${{ ! failure() && ! cancelled() && always() }}
    name: dcc://lua
    uses: ./.github/workflows/dcc.yaml
    with:
      name: lua
      skip: ${{ needs.calc.outputs.dccLua == 'false' }}
    secrets: inherit
  dccLualatex:
    needs:
      - calc
      - bundle
      - dccLua
    if: ${{ ! failure() && ! cancelled() && always() }}
    name: dcc://lualatex
    uses: ./.github/workflows/dcc.yaml
    with:
      name: lualatex
      skip: ${{ needs.calc.outputs.dccLualatex == 'false' }}
    secrets: inherit
  dccMoonscript:
    needs:
      - calc
      - bundle
      - dccLua
    if: ${{ ! failure() && ! cancelled() && always() }}
    name: dcc://moonscript
    uses: ./.github/workflows/dcc.yaml
    with:
      name: moonscript
      skip: ${{ needs.calc.outputs.dccMoonscript == 'false' }}
    secrets: inherit
  dccPerl:
    needs:
      - calc
      - bundle
      - baseDebian
    if: ${{ ! failure() && ! cancelled() && always() }}
    name: dcc://perl
    uses: ./.github/workflows/dcc.yaml
    with:
      name: perl
      skip: ${{ needs.calc.outputs.dccPerl == 'false' }}
    secrets: inherit
  dccProlog:
    needs:
      - calc
      - bundle
      - baseDebian
    if: ${{ ! failure() && ! cancelled() && always() }}
    name: dcc://prolog
    uses: ./.github/workflows/dcc.yaml
    with:
      name: prolog
      skip: ${{ needs.calc.outputs.dccProlog == 'false' }}
    secrets: inherit
  dccPython:
    needs:
      - calc
      - bundle
      - baseDebian
    if: ${{ ! failure() && ! cancelled() && always() }}
    name: dcc://python
    uses: ./.github/workflows/dcc.yaml
    with:
      name: python
      skip: ${{ needs.calc.outputs.dccPython == 'false' }}
    secrets: inherit
  dccRuby:
    needs:
      - calc
      - bundle
      - baseDebian
    if: ${{ ! failure() && ! cancelled() && always() }}
    name: dcc://ruby
    uses: ./.github/workflows/dcc.yaml
    with:
      name: ruby
      skip: ${{ needs.calc.outputs.dccRuby == 'false' }}
    secrets: inherit
  dccScala:
    needs:
      - calc
      - bundle
      - baseJava
    if: ${{ ! failure() && ! cancelled() && always() }}
    name: dcc://scala
    uses: ./.github/workflows/dcc.yaml
    with:
      name: scala
      skip: ${{ needs.calc.outputs.dccScala == 'false' }}
    secrets: inherit
  examples:
    needs:
      - calc
      - dccClojure
      - dccDeno
      - dccElixir
      - dccElm
      - dccErlang
      - dccFactor
      - dccGo
      - dccGroovy
      - dccHaskell
      - dccIo
      - dccJavascriptPnpm
      - dccJavascript
      - dccJulia
      - dccKotlin
      - dccLua
      - dccLualatex
      - dccMoonscript
      - dccPerl
      - dccProlog
      - dccPython
      - dccRuby
      - dccScala
    if: ${{ ! failure() && ! cancelled() && always() }}
    uses: ./.github/workflows/examples.yaml
    with:
      skip: ${{ needs.calc.outputs.buildLanguages == 'false' }}
    secrets: inherit
